
services:
  db:
    container_name: database
    image: "postgres:17.6-alpine3.22"
    environment:
      - POSTGRES_DB=danieldoescocktails
      - POSTGRES_USER=daniel
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    volumes:
      - db_data:/var/lib/postresql/data
      - ./database/schema/postgres.sql:/docker-entrypoint-initdb.d/schema.sql
    secrets:
      - db-password
    healthcheck:
      test: ["CMD", "pg_isready", "-ddanieldoescocktails", "-Udaniel"]
      interval: 60s
      timeout: 10s
      retries: 3

  backend:
    depends_on:
      - db
    container_name: backend
    image: "danieldoescocktails-backend:latest"
    volumes:
      - ./.letsencrypt:/certs
    environment:
      - CORS-ALLOW-ORIGINS=[
          "https://localhost","https://localhost:5000",
          "https://danieldoescocktails.com","https://danieldoescocktails.com:5000",
          "https://www.danieldoescocktails.com","https://www.danieldoescocktails.com:5000"
        ]
      - CERTDIR=/certs/live/danieldoescocktails.com/
      - DB_HOST=database
      - DB_NAME=danieldoescocktails
      - DB_USER=daniel
    env_file: ".secrets/postgres-variables.env"
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "python", "/opt/danieldoescocktails/backend/healthcheck.py"]
      interval: 60s

  frontend:
    depends_on:
      - backend
    container_name: frontend
    image: "danieldoescocktails-frontend:latest"
    volumes:
      - ./.well-known:/usr/share/nginx/static/.well-known
      - ./.letsencrypt:/certs
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://0.0.0.0 || exit 1"]
      interval: 10m 



volumes:
  db_data: 


secrets:
  db-password:
    file: .secrets/postgres-compose.txt

